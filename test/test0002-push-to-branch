#!/bin/bash

set -e

. "$(dirname "$0")/common.sh"

create_git_workspace $TEST_TMP_DIR/client
create_git_workspace $TEST_TMP_DIR/server.git --bare

pushd $TEST_TMP_DIR/server.git
# Remove sample hooks just so it is easier to see what I've installed
rm -f hooks/*.sample
git-replay init-server
popd

pushd $TEST_TMP_DIR/client
rm -f hooks/*.sample
git-replay init

git remote add origin $TEST_TMP_DIR/server.git

########################################################################
# Test amending the top commit and pushing it to the server
########################################################################

quick_commit_files "First commit" one
quick_commit_files "Second commit" two
oldhead=$(git rev-parse HEAD)

git push origin master:master

echo "a change" > two
git commit -a --amend -C HEAD

git-replay push origin master:master

assert_equal "local and remote branches" "$(git rev-parse origin/master)" "$(git rev-parse master)"

########################################################################
# Test that the server rejects a push
########################################################################

git reset --hard $oldhead

touch three
git add three
git commit --amend -C HEAD

! git-replay push origin master:master

assert_not_equal "local and remote branches" "$(git rev-parse origin/master)" "$(git rev-parse master)"

# Be sure that the git command cannot force push it
! git push origin +master:master

assert_not_equal "local and remote branches" "$(git rev-parse origin/master)" "$(git rev-parse master)"
